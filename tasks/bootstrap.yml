---
- name: Check ZooKeeper status
  shell: "echo \"ls /hc/ns/{{ openio_namespace }}\" | {{ openio_zookeeper_cli_path }} -server {{ openio_zk_cluster_ip[0] }}:6005 2>/dev/null | grep -qe srv"
  register: openio_zk_status
  ignore_errors: yes
  when:
    - inventory_hostname == groups['openio_zk_cluster'][0]

- name: Wait for Zookeeper to be online
  shell: echo ruok | nc {{item}} 6005
  register: result
  until: result.stdout.find("imok") != -1
  retries: 10
  delay: 3
  with_items: "{{openio_zk_cluster_ip}}"

- name: "Bootstrapping ZooKeeper for namespace {{ openio_namespace }}"
  command: "{{ openio_zookeeper_bootstrap_cmd }} {{ openio_namespace }} {{ openio_zookeeper_bootstrap_options }}"
  when:
    - inventory_hostname == groups['openio_zk_cluster'][0]
      and openio_zk_status.rc != 0
  notify: "Restart meta0 meta1"

- name: "Run handlers"
  meta: flush_handlers

- name: "Unlock scores on meta0/meta1 services"
  shell: "{{ openio_cli_path }} cluster unlockall meta0 meta1 --oio-ns={{ openio_namespace }} &&
          {{ openio_cli_path }} cluster wait      meta0 meta1 --oio-ns={{ openio_namespace }}"

- name: "Bootstrapping OpenIO namespace {{ openio_namespace }} with {{ openio_replicas }} replicas"
  command: "{{ openio_cli_path }} --oio-ns={{ openio_namespace }} directory bootstrap --replicas {{ openio_replicas }} --no-rdir"
  when:
    - inventory_hostname == groups['openio_conscience'][0]
  notify: "Restart meta0 meta1"

- name: "Run handlers"
  meta: flush_handlers

- name: "Starting services for namespace {{ openio_namespace }}"
  command: "{{ openio_gridinit_cmd }} start @{{ openio_namespace}}"

- name: "Unlock scores"
  shell: "{{ openio_cli_path }} cluster unlockall --oio-ns={{ openio_namespace }} &&
          {{ openio_cli_path }} cluster wait      --oio-ns={{ openio_namespace }}"

# - name: "Bootstrapping Reverse Directory for namespace {{ openio_namespace }}"
#   command: "{{ openio_cli_path }} --oio-ns={{ openio_namespace }} volume admin bootstrap"
#   when:
#     - inventory_hostname == groups['openio_conscience'][0]
...
